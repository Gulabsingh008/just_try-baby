from pymongo import MongoClient
from info import DATABASE_URI, DATABASE_NAME, COLLECTION_NAME  # ‚¨Ö info.py ‡§∏‡•á Import ‡§ï‡§ø‡§Ø‡§æ
from motor.motor_asyncio import AsyncIOMotorClient  # ‚úÖ Motor for Async MongoDB

try:
    client = AsyncIOMotorClient(DATABASE_URI)
    db = client[DATABASE_NAME]
    print("‚úÖ MongoDB Connection Successful!")  # Check if connection is established
except Exception as e:
    print(f"‚ùå MongoDB Connection Failed: {e}")
    db = None

# ‚úÖ UserDownload Model ‡§¨‡§®‡§æ‡§è‡§Ç
class UserDownload:
    collection = db[COLLECTION_NAME] if db else None  # üõë Handle None Case

    @staticmethod
    async def find_one(query):
        if UserDownload.collection is None:
            print("‚ùå Error: Collection is None!")
            return None
        return await UserDownload.collection.find_one(query)
    

# ‚úÖ MongoDB ‡§∏‡•á ‡§ï‡§®‡•á‡§ï‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç
client = MongoClient(DATABASE_URI)
db = client[DATABASE_NAME]  # Database ‡§∏‡•á ‡§ï‡§®‡•á‡§ï‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç

# ‚úÖ UserDownload Model ‡§¨‡§®‡§æ‡§è‡§Ç
class UserDownload:
    collection = db[COLLECTION_NAME]  # Collection ‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç

    @staticmethod
    async def find_one(query):
        """ ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¢‡•Ç‡§Ç‡§¢‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è """
        return await UserDownload.collection.find_one(query)

    @staticmethod
    async def insert_one(data):
        """ ‡§®‡§Ø‡§æ ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ú‡•ã‡§°‡§º‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è """
        return await UserDownload.collection.insert_one(data)

    @staticmethod
    async def update_one(query, update_data):
        """ ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è """
        return await UserDownload.collection.update_one(query, {"$set": update_data})

    @staticmethod
    async def delete_one(query):
        """ ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§°‡§ø‡§≤‡•Ä‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è """
        return await UserDownload.collection.delete_one(query)

    @staticmethod
    async def count_documents(query={}):
        """ ‡§Ø‡•Ç‡§ú‡§º‡§∞‡•ç‡§∏ ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§ó‡§ø‡§®‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è """
        return await UserDownload.collection.count_documents(query)
